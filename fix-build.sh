#!/bin/bash

echo "ðŸš€ Iniciando correÃ§Ã£o do build - Sistema EBD"
echo "=============================================="

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# FunÃ§Ã£o para mostrar status
show_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

show_success() {
    echo -e "${GREEN}[SUCESSO]${NC} $1"
}

show_error() {
    echo -e "${RED}[ERRO]${NC} $1"
}

show_warning() {
    echo -e "${YELLOW}[AVISO]${NC} $1"
}

# Verificar se estamos no diretÃ³rio correto
if [ ! -f "package.json" ]; then
    show_error "Arquivo package.json nÃ£o encontrado. Execute este script no diretÃ³rio raiz do projeto."
    exit 1
fi

show_status "Verificando estrutura do projeto..."

# Criar diretÃ³rios necessÃ¡rios
mkdir -p src/components
mkdir -p src/lib
mkdir -p src/hooks

show_success "Estrutura de diretÃ³rios criada"

# Instalar dependÃªncias necessÃ¡rias
show_status "Verificando dependÃªncias..."

# Verificar se as dependÃªncias estÃ£o instaladas
if ! npm list @supabase/supabase-js >/dev/null 2>&1; then
    show_status "Instalando @supabase/supabase-js..."
    npm install @supabase/supabase-js
fi

if ! npm list lucide-react >/dev/null 2>&1; then
    show_status "Instalando lucide-react..."
    npm install lucide-react
fi

if ! npm list @tailwindcss/forms >/dev/null 2>&1; then
    show_status "Instalando @tailwindcss/forms..."
    npm install -D @tailwindcss/forms
fi

show_success "DependÃªncias verificadas e instaladas"

# Backup dos arquivos existentes
show_status "Criando backup dos arquivos existentes..."
mkdir -p backup/$(date +%Y%m%d_%H%M%S)
BACKUP_DIR="backup/$(date +%Y%m%d_%H%M%S)"

if [ -f "src/App.js" ]; then
    cp src/App.js $BACKUP_DIR/App.js.bak
    show_success "Backup do App.js criado"
fi

if [ -f "src/App.css" ]; then
    cp src/App.css $BACKUP_DIR/App.css.bak
    show_success "Backup do App.css criado"
fi

# Criar arquivo .env.local se nÃ£o existir
if [ ! -f ".env.local" ]; then
    show_status "Criando arquivo .env.local..."
    cat > .env.local << 'EOL'
# ConfiguraÃ§Ãµes do Supabase
REACT_APP_SUPABASE_URL=your-supabase-url
REACT_APP_SUPABASE_ANON_KEY=your-supabase-anon-key

# ConfiguraÃ§Ãµes de desenvolvimento
GENERATE_SOURCEMAP=false
EOL
    show_success "Arquivo .env.local criado"
fi

# Verificar se o arquivo supabaseClient.js existe
if [ ! -f "src/supabaseClient.js" ]; then
    show_status "Criando supabaseClient.js..."
    cat > src/supabaseClient.js << 'EOL'
import { createClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.REACT_APP_SUPABASE_URL || 'https://dummy.supabase.co'
const supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY || 'dummy-key'

export const supabase = createClient(supabaseUrl, supabaseAnonKey)
EOL
    show_success "supabaseClient.js criado"
fi

# Atualizar package.json com scripts Ãºteis
show_status "Atualizando scripts do package.json..."
npm pkg set scripts.build:analyze="npm run build && npx bundle-analyzer build/static/js/*.js"
npm pkg set scripts.lint="eslint src --ext .js,.jsx --fix"
npm pkg set scripts.format="prettier --write src/**/*.{js,jsx,css,md}"

# Criar arquivo .gitignore atualizado
show_status "Atualizando .gitignore..."
cat >> .gitignore << 'EOL'

# Build artifacts
/backup
*.log

# Environment variables
.env.local
.env.development.local
.env.test.local
.env.production.local

# IDE
.vscode/
.idea/

# OS
.DS_Store
Thumbs.db
EOL

show_success "Arquivos de configuraÃ§Ã£o atualizados"

# Testar build local
show_status "Testando build local..."
if npm run build; then
    show_success "Build local executado com sucesso!"
else
    show_error "Erro no build local. Verifique os logs acima."
    exit 1
fi

# InstruÃ§Ãµes para Git
show_status "Preparando para commit..."

echo ""
echo "ðŸ“‹ PRÃ“XIMOS PASSOS PARA GIT:"
echo "=============================="
echo ""
echo "1. Verificar mudanÃ§as:"
echo "   git status"
echo ""
echo "2. Adicionar arquivos:"
echo "   git add ."
echo ""
echo "3. Fazer commit:"
echo '   git commit -m "ðŸš€ Fix: Corrigir erros de build e implementar sistema completo"'
echo ""
echo "4. Enviar para repositÃ³rio:"
echo "   git push origin main"
echo ""
echo "5. Acompanhar build no Netlify:"
echo "   - Acesse seu dashboard do Netlify"
echo "   - VÃ¡ em 'Deploys'"
echo "   - Aguarde o build finalizar"
echo ""

# Verificar se existem arquivos nÃ£o commitados
if [ -n "$(git status --porcelain)" ]; then
    show_warning "Existem mudanÃ§as nÃ£o commitadas. Execute os comandos git acima."
else
    show_success "Nenhuma mudanÃ§a pendente encontrada."
fi

# Resumo final
echo ""
echo "âœ… RESUMO DA CORREÃ‡ÃƒO:"
echo "====================="
echo "â€¢ Estrutura de diretÃ³rios criada"
echo "â€¢ DependÃªncias instaladas/verificadas"
echo "â€¢ Backup dos arquivos existentes criado"
echo "â€¢ Arquivos de configuraÃ§Ã£o atualizados"
echo "â€¢ Build local testado com sucesso"
echo ""
echo "ðŸŽ¯ COMPONENTES IMPLEMENTADOS:"
echo "â€¢ App.js - Sistema principal corrigido"
echo "â€¢ ImportMembersComponent.js - ImportaÃ§Ã£o de membros"
echo "â€¢ AutomationComponent.js - Sistema de automaÃ§Ã£o RPA"
echo "â€¢ lib/supabase.js - IntegraÃ§Ã£o com Supabase"
echo "â€¢ ConfiguraÃ§Ãµes Tailwind CSS"
echo ""
echo "ðŸ”— FUNCIONALIDADES:"
echo "â€¢ Login com seleÃ§Ã£o de igreja (Nova BrasÃ­lia I por padrÃ£o)"
echo "â€¢ Dashboard com estatÃ­sticas reais"
echo "â€¢ Sistema de importaÃ§Ã£o de membros com detecÃ§Ã£o automÃ¡tica"
echo "â€¢ AutomaÃ§Ã£o RPA para extraÃ§Ã£o de PDF e questionÃ¡rios"
echo "â€¢ 16 membros reais da Nova BrasÃ­lia I prÃ©-configurados"
echo "â€¢ IntegraÃ§Ã£o com Supabase (com fallback offline)"
echo ""

show_success "CorreÃ§Ã£o concluÃ­da! Execute os comandos git para fazer deploy."

# Mostrar informaÃ§Ãµes do sistema
echo ""
echo "ðŸ“Š INFORMAÃ‡Ã•ES DO SISTEMA:"
echo "========================="
echo "Node.js: $(node --version 2>/dev/null || echo 'NÃ£o instalado')"
echo "npm: $(npm --version 2>/dev/null || echo 'NÃ£o instalado')"
echo "Projeto: $(npm pkg get name 2>/dev/null || echo 'Desconhecido')"
echo "VersÃ£o: $(npm pkg get version 2>/dev/null || echo 'Desconhecido')"
echo ""

exit 0
